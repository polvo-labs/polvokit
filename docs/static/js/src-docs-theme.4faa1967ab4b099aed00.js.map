{"version":3,"sources":["/var/www/html/polvokit/src/components/ThemeDescriptor/styles.js","/var/www/html/polvokit/src/components/ThemeDescriptor/index.js","/var/www/html/polvokit/src/docs/theme.mdx"],"names":["Color","styled","div","_templateObject","prop","ColorLabel","span","_templateObject2","ThemeDescriptor","_ref","theme","react_default","a","createElement","src","space","Object","keys","map","key","value","id","concat","label","startsWith","color","defaultValue","readOnly","__webpack_require__","d","__webpack_exports__","layoutProps","MDXLayout","MDXContent","components","props","_var_www_html_polvokit_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","_components_ThemeDescriptor__WEBPACK_IMPORTED_MODULE_3__","parentName","className","isMDXComponent"],"mappings":"s1BAGO,IAAMA,EAAQC,IAAOC,IAAVC,IAMIC,YAAK,2NAIpB,IAAMC,EAAaJ,IAAOK,KAAVC,KCRR,SAASC,EAATC,GAAqC,IAATC,EAASD,EAATC,MACzC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgBC,MAAO,IACpBC,OAAOC,KAAKP,GAAOQ,IAAI,SAAAC,GAAG,OACzBR,EAAAC,EAAAC,cAAA,OAAKM,IAAKA,GACRR,EAAAC,EAAAC,cAAA,UAAKM,GACLR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACGE,OAAOC,KAAKP,EAAMS,IAAMD,IAAI,SAAAd,GAC3B,IAAMgB,EAAQV,EAAMS,GAAKf,GACzB,OACEO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAE,GAAAC,OAAKH,EAAL,KAAAG,OAAYlB,GACde,IAAG,GAAAG,OAAKH,EAAL,KAAAG,OAAYlB,GACfmB,MAAOnB,GAENgB,EAAMI,YAAcJ,EAAMI,WAAW,KACpCb,EAAAC,EAAAC,cAACb,EAAD,CAAOyB,MAAOL,GACZT,EAAAC,EAAAC,cAACR,EAAD,KAAae,IAGfT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEY,aAAcN,EACdO,UAAQ,kOA3B9BC,EAAAC,EAAAC,EAAA,sBAAAtB,yhBCYMuB,EAAc,GAGdC,EAAY,UACH,SAASC,EAATxB,GAGZ,IAFDyB,EAECzB,EAFDyB,WACGC,EACFnB,OAAAoB,EAAA,EAAApB,CAAAP,EAAA,gBACD,OAAOO,OAAAqB,EAAA,EAAArB,CAACgB,EAADhB,OAAAsB,OAAA,GAAeP,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYK,QAAQ,cAE5EvB,OAAAqB,EAAA,EAAArB,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAqB,EAAA,EAAArB,CAAA,KAAQ,CACNK,GAAM,YADR,YAGAL,OAAAqB,EAAA,EAAArB,CAAA,gDACAA,OAAAqB,EAAA,EAAArB,CAACwB,EAAA,EAAD,CAAiB9B,MAAOA,IAAO6B,QAAQ,oBACvCvB,OAAAqB,EAAA,EAAArB,CAAA,KAAQ,CACNK,GAAM,cADR,cAGAL,OAAAqB,EAAA,EAAArB,CAAA,yEACEA,OAAAqB,EAAA,EAAArB,CAAA,cAAYyB,WAAW,KAAvB,qBADF,sCAEAzB,OAAAqB,EAAA,EAAArB,CAAA,WAAKA,OAAAqB,EAAA,EAAArB,CAAA,OAAAA,OAAAsB,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,gBADZ,wwBAkCTT,EAAWU,gBAAiB","file":"static/js/src-docs-theme.67814225.js","sourcesContent":["import styled from 'styled-components'\nimport { prop } from 'styled-tools'\n\nexport const Color = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100px;\n  background-color: ${prop('color')};\n  box-shadow: rgba(27,27,27,0.25) 0 0 1px;\n`\n\nexport const ColorLabel = styled.span`\n  display: inline-block;\n  background-color: #000;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 18px;\n  color: #fff;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, Input, VerticalSpacer } from '../..'\nimport { Color, ColorLabel } from './styles'\n\nexport default function ThemeDescriptor ({ theme }) {\n  return (\n    <VerticalSpacer space={60}>\n      {Object.keys(theme).map(key => (\n        <div key={key}>\n          <h2>{key}</h2>\n          <VerticalSpacer>\n            {Object.keys(theme[key]).map(prop => {\n              const value = theme[key][prop]\n              return (\n                <FormGroup\n                  id={`${key}.${prop}`}\n                  key={`${key}.${prop}`}\n                  label={prop}\n                >\n                  {value.startsWith && value.startsWith('#') ? (\n                    <Color color={value}>\n                      <ColorLabel>{value}</ColorLabel>\n                    </Color>\n                  ) : (\n                    <Input\n                      defaultValue={value}\n                      readOnly\n                    />\n                  )}\n                </FormGroup>\n              )\n            })}\n          </VerticalSpacer>\n        </div>\n      ))}\n    </VerticalSpacer>\n  )\n}\n\nThemeDescriptor.propTypes = {\n  /** Theme object */\n  theme: PropTypes.object.isRequired\n}\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport ThemeDescriptor from '../components/ThemeDescriptor'\nimport theme from '../theme'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"theme\"\n    }}>{`Theme`}</h1>\n    <h2 {...{\n      \"id\": \"defaults\"\n    }}>{`Defaults`}</h2>\n    <p>{`There are the default theme values:`}</p>\n    <ThemeDescriptor theme={theme} mdxType=\"ThemeDescriptor\" />\n    <h2 {...{\n      \"id\": \"overriding\"\n    }}>{`Overriding`}</h2>\n    <p>{`You can easily override the above theme values by using\nthe `}<inlineCode parentName=\"p\">{`<ThemeProvider />`}</inlineCode>{` component from styled-components:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { ThemeProvider } from 'styled-components'\n\nfunction App () {\n  return (\n    <ThemeProvider\n      theme={{\n        // use \\`polvokit\\` key\n        polvokit: {\n          // override the default primary color\n          colors: {\n            primary: 'hotpink'\n          },\n          \n          // and also override the default font\n          fonts: {\n            primary: 'Verdana'\n          }\n        },\n        \n        // pass your own theme values here\n        myOwnThemeProp: 'wathever',\n        // ...\n      }}\n    >\n      <AppContent />\n    </ThemeProvider>\n  )\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}