{"version":3,"sources":["/var/www/html/polvokit/src/docs/forms.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_var_www_html_polvokit_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","isMDXComponent"],"mappings":"qUAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAAA,yBAAoBA,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CACtCC,KAAQ,mDADQ,oBAApB,4BAGFP,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CAChBC,KAAQ,6CADd,0BAHE,yCAMAP,OAAAE,EAAA,EAAAF,CAAA,sDAAiDA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,aAAjD,2HAEAN,OAAAE,EAAA,EAAAF,CAAA,uCACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,IAA3B,8PAYLN,OAAAE,EAAA,EAAAF,CAAA,wBAAmBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,aAAnB,0BACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,gBADZ,0DAOLR,OAAAE,EAAA,EAAAF,CAAA,+DACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,gBADR,gBAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,gBADZ,s6CAkDTZ,EAAWa,gBAAiB","file":"static/js/src-docs-forms.e2da492d.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"forms\"\n    }}>{`Forms`}</h1>\n    <p>{`We recommend `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/final-form/react-final-form\"\n      }}>{`react-final-form`}</a>{` for building forms and\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/polvo-labs/form-utils\"\n      }}>{`@polvo-labs/form-utils`}</a>{` for handling validation and masking.`}</p>\n    <p>{`Polvokit also provides a component called `}<inlineCode parentName=\"p\">{`FormField`}</inlineCode>{`, a wrapper around react-final-form's Field component.\nIt comes with lots of shortcuts for common polvokit components.`}</p>\n    <p>{`So, instead of doing this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<Field name='name' id='user_name'>\n  {({ input, meta, id, ...rest }) => (\n    <FormGroup\n      id={id}\n      label='Name'\n      error={meta.touched && meta.error}\n    />\n      <Input {...input} {...rest} />\n    </FormGroup>\n  )}\n</Field>\n`}</code></pre>\n    <p>{`You can use `}<inlineCode parentName=\"p\">{`FormField`}</inlineCode>{` to do the above work:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<FormField.Input\n  name='name'\n  label='Name'\n/>\n`}</code></pre>\n    <p>{`With FormField, the id is generated automatically.`}</p>\n    <h2 {...{\n      \"id\": \"form-example\"\n    }}>{`Form example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Form } from 'react-final-form'\nimport { FormField, FormSpacer, ButtonSubmit } from 'polvokit'\nimport * as formUtils from '@polvo-labs/form-utils'\n\nfunction FormUser (props) {\n  return (\n    <Form onSubmit={props.onSubmit}>\n      {({ handleSubmit, submitting }) => (\n        <FormSpacer>\n          <FormField.Input\n            name='name'\n            label='Name'\n            {...formUtils.required}\n          />\n          <FormField.Input\n            name='email'\n            label='E-mail'\n            {...formUtils.emailRequired}\n          />\n          <FormField.InputDatePicker\n            name='birthday'\n            label='Birthday'\n            {...formUtils.required}\n          />\n          <FormField.Select\n            name='profile'\n            label='Profile'\n            options=[\n              { label: 'Guest', value: 'guest' },\n              { label: 'Public', value: 'public' },\n              { label: 'Admin', value: 'admin' }\n            ]\n            {...formUtils.required}\n          />\n          <FormField.Switch\n            name='is_email_public'\n            label='Is email public'\n          />\n          <ButtonSubmit submitting={submitting} />\n        </FormSpacer>\n      )}\n    </Form>\n  )\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}