{"version":3,"sources":["webpack:///./demo/src/screens/HomeScreen.js","webpack:///./src/components/ToastProvider/Toast.mdx"],"names":["HomeScreen","_useToast","useToast","push","clearAll","messages","react_default","a","createElement","src","space","type","appearance","onClick","content","outline","MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","dist","name","id","ToastProvider","parentName","className"],"mappings":"gTAOe,SAASA,IAAc,IAAAC,EACCC,cAA7BC,EAD4BF,EAC5BE,KAAgBC,GADYH,EACtBI,SADsBJ,EACZG,UAExB,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgBC,MAAO,GACrBJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,KAAK,SACLC,WAAW,UACXC,QAAS,WACPV,EAAK,CACHQ,KAAM,UACNG,QAAS,+BANf,0BAaFR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,KAAK,SACLC,WAAW,SACXC,QAAS,WACPV,EAAK,CACHQ,KAAM,SACNG,QAAS,6BANf,yBAaFR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,KAAK,SACLC,WAAW,UACXC,QAAS,WACPV,EAAK,CACHQ,KAAM,UACNG,QAAS,4BANf,uBAaFR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,KAAK,SACLI,SAAO,EACPF,QAAS,kBAAMT,MAHjB,4xCC9CaY,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKH,MAA9BW,EADDD,EACCC,WADDC,EAAAF,EAAA,gBAGP,OAAOrB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CACEC,KAAK,UAELH,WAAYA,GACzBtB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAYX,MAAO,CAACe,GAAK,UAAvD,SACA1B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIH,WAAYA,GAA7B,2DACAtB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAYX,MAAO,CAACe,GAAK,YAAvD,WACA1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAACR,EAAD,OAEFM,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAYX,MAAO,CAACe,GAAK,UAAvD,SACA1B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIH,WAAYA,GAA7B,8DACWtB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,aAAaH,WAAYA,EAAYM,WAAW,KAA7D,iBADX,eAEA5B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,MAAMH,WAAYA,GAAYtB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,OAAOH,WAAYA,EAAYM,WAAW,MAAMjB,MAAO,CAACkB,UAAY,gBAAjF,yJAU3C7B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIH,WAAYA,GAA7B,OAAiDtB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,aAAaH,WAAYA,EAAYM,WAAW,KAA7D,YAAjD,mEAEA5B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,MAAMH,WAAYA,GAAYtB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,OAAOH,WAAYA,EAAYM,WAAW,MAAMjB,MAAO,CAACkB,UAAY,gBAAjF","file":"static/js/src-components-toast-provider-toast.7988d373.js","sourcesContent":["import React from 'react'\nimport {\n  VerticalSpacer,\n  Button,\n  useToast\n} from '../../../src'\n\nexport default function HomeScreen () {\n  const { push, messages, clearAll } = useToast()\n\n  return (\n    <VerticalSpacer space={5}>\n      <div>\n        <Button\n          type='button'\n          appearance='success'\n          onClick={() => {\n            push({\n              type: 'success',\n              content: 'Successful toast message'\n            })\n          }}\n        >\n          Show successful toast\n        </Button>\n      </div>\n      <div>\n        <Button\n          type='button'\n          appearance='danger'\n          onClick={() => {\n            push({\n              type: 'danger',\n              content: 'Dangerous toast mesage'\n            })\n          }}\n        >\n          Show dangerous toast\n        </Button>\n      </div>\n      <div>\n        <Button\n          type='button'\n          appearance='warning'\n          onClick={() => {\n            push({\n              type: 'warning',\n              content: 'Warning toast message'\n            })\n          }}\n        >\n          Show warning toast\n        </Button>\n      </div>\n      <div>\n        <Button\n          type='button'\n          outline\n          onClick={() => clearAll()}\n        >\n          Clear all\n        </Button>\n      </div>\n    </VerticalSpacer>\n  )\n}\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import ToastProvider from '.'\nimport HomeScreen from '../../../demo/src/screens/HomeScreen'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"toast\"}}>{`Toast`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Polvokit provides a toastr-like message implementation.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<ToastProvider>\n  <HomeScreen />\n</ToastProvider>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"setup\"}}>{`Setup`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In order to use Toast, you have to wrap your app\nwith the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ToastProvider`}</MDXTag>{` component:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import { ToastProvider } from 'polvokit'\n\nfunction App () {\n  return (\n    <ToastProvider>\n      <AppContent />\n    </ToastProvider>\n  )\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useToast`}</MDXTag>{` hook provides\naccess to the methods and the messages as well:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import { useToast } from 'polvokit'\n\nfunction Screen () {\n  const { push, messages, dismiss, clearAll } = useToast()\n\n  return (\n    <button onClick={() => push({\n      type: 'success',\n      content: 'Message content...'\n    })}>\n      send toast message\n    </button>\n  )\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}