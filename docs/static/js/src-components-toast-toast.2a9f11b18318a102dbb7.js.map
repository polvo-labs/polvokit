{"version":3,"sources":["/var/www/html/polvokit/demo/src/screens/HomeScreen.js","/var/www/html/polvokit/src/components/Toast/Toast.mdx"],"names":["HomeScreen","_useToast","useToast","push","clearAll","messages","react_default","a","createElement","src","space","type","appearance","onClick","content","outline","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","objectWithoutProperties","index_es","assign","mdxType","id","ToastProvider","parentName","className","align","isMDXComponent"],"mappings":"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","file":"static/js/src-components-toast-toast.8ce094c6.js","sourcesContent":["import React from 'react'\nimport {\n  VerticalSpacer,\n  Button,\n  useToast\n} from '../../../src'\n\nexport default function HomeScreen () {\n  const { push, messages, clearAll } = useToast()\n\n  return (\n    <VerticalSpacer space={5}>\n      <div>\n        <Button\n          type='button'\n          appearance='success'\n          onClick={() => {\n            push({\n              type: 'success',\n              content: 'Successful toast message'\n            })\n          }}\n        >\n          Show successful toast\n        </Button>\n      </div>\n      <div>\n        <Button\n          type='button'\n          appearance='danger'\n          onClick={() => {\n            push({\n              type: 'error',\n              content: 'Dangerous toast message'\n            })\n          }}\n        >\n          Show dangerous toast\n        </Button>\n      </div>\n      <div>\n        <Button\n          type='button'\n          appearance='warning'\n          onClick={() => {\n            push({\n              type: 'warning',\n              content: 'Warning toast message'\n            })\n          }}\n        >\n          Show warning toast\n        </Button>\n      </div>\n      <div>\n        <Button\n          type='button'\n          appearance='primary'\n          onClick={() => {\n            push({\n              type: 'default',\n              content: 'Primary toast message'\n            })\n          }}\n        >\n          Show default toast\n        </Button>\n      </div>\n      <div>\n        <Button\n          type='button'\n          outline\n          onClick={() => clearAll()}\n        >\n          Clear all\n        </Button>\n      </div>\n    </VerticalSpacer>\n  )\n}\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport ToastProvider from './ToastProvider'\nimport HomeScreen from '../../../demo/src/screens/HomeScreen'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <p>{`Polvokit provides a toastr-like message implementation.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <ToastProvider mdxType=\"ToastProvider\">\n  <HomeScreen mdxType=\"HomeScreen\" />\n    </ToastProvider>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p>{`In order to use Toast, you have to wrap your app\nwith the `}<inlineCode parentName=\"p\">{`ToastProvider`}</inlineCode>{` component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { ToastProvider } from 'polvokit'\n\nfunction App () {\n  return (\n    <ToastProvider>\n      <AppContent />\n    </ToastProvider>\n  )\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useToast`}</inlineCode>{` hook provides\naccess to the methods and the messages as well:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { useToast } from 'polvokit'\n\nfunction Screen () {\n  const { push, messages, dismiss, clearAll } = useToast()\n\n  return (\n    <button onClick={() => push({\n      type: 'success',\n      content: 'Message content...'\n    })}>\n      send toast message\n    </button>\n  )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"toast-object\"\n    }}>{`Toast object`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`generated automatically`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`default`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`success`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`error`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`warning`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`content`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string or react child`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the toast content`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`push({\n  type: 'success',\n  message: 'User successfuly created'\n})\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}