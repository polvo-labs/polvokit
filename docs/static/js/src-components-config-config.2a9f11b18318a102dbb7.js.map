{"version":3,"sources":["/var/www/html/polvokit/src/components/Config/Config.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_var_www_html_polvokit_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"mVAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,UADR,UAGAL,OAAAE,EAAA,EAAAF,CAAA,gGAEAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kBADR,kBAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,gBADZ,kMAeLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,YADR,UAGAL,OAAAE,EAAA,EAAAF,CAAA,iDAA4CA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAA5C,eACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,gBADZ,6HASLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,aADR,aAGAL,OAAAE,EAAA,EAAAF,CAAA,sCACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,gBADZ,mbAoBTX,EAAWY,gBAAiB","file":"static/js/src-components-config-config.f59569fb.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"config\"\n    }}>{`Config`}</h1>\n    <p>{`These components are used specially for handling i18n. Check out the\ni18n section.`}</p>\n    <h2 {...{\n      \"id\": \"configprovider\"\n    }}>{`ConfigProvider`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { ConfigProvider } from 'polvokit'\n\n<ConfigProvider\n  config={{\n    param: 'value',\n    key: {\n      subkey: 'another value'\n    }\n  }}\n>\n  <YourApp />\n</ConfigProvider>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"config-1\"\n    }}>{`Config`}</h2>\n    <p>{`You can retrieve the values with the `}<inlineCode parentName=\"p\">{`Config`}</inlineCode>{` component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Config } from 'polvokit'\n\n<Config\n  id='key.subkey'\n  defaultValue='you can provide a fallback value'\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"useconfig\"\n    }}>{`useConfig`}</h2>\n    <p>{`A hook is also available:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { useConfig } from 'polvokit'\n\nfunction MyComponent (props) {\n  const API_KEY = useConfig({ id: 'api_key' })\n  \n  return (\n    <Fetch\n      url={props.url}\n      headers={{\n        Authorization: API_KEY\n      }}\n    />\n  )\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}