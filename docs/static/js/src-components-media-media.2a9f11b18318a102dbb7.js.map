{"version":3,"sources":["/var/www/html/polvokit/src/components/Media/Media.mdx","/var/www/html/polvokit/src/components/Media/index.js","/var/www/html/polvokit/src/theme.js"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_var_www_html_polvokit_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Props","Media","__codesandbox","___WEBPACK_IMPORTED_MODULE_4__","query","bps","concat","medium","matches","of","isMDXComponent","_var_www_html_polvokit_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","styled_components__WEBPACK_IMPORTED_MODULE_3__","themeObject","breakpoints","_var_www_html_polvokit_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","theme","objectPath","get","react_media__WEBPACK_IMPORTED_MODULE_4__","isFunction","__webpack_exports__","colors","default","primary","primaryLight","success","warning","danger","light","control","disabled","text","textLight","placeholder","sidebar","sidebarButtonColor","sidebarButtonBeforeColor","white","dimensions","controlHeight","sidebarWidth","fonts","secondary","xsmall","small","large","stacks","high","low"],"mappings":"qaAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAAA,gCAA2BA,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CAC7CC,KAAQ,iDADe,eAA3B,cAGMP,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,SAHN,mFAIAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,IAA3B,0cAiBLN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,WAGAL,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,mIAAwIC,QAAS,CAClLZ,MAAOa,KAAOA,KAAKb,MAAQA,EAC3Bc,eACAC,UACAC,WACCC,cAAa,YAAeZ,QAAQ,cACzCJ,OAAAE,EAAA,EAAAF,CAACiB,EAAA,EAAD,CAAOC,MAAO,SAAAC,GAAG,qBAAAC,OAAmBD,EAAIE,OAAvB,MAAkCjB,QAAQ,SACxD,SAAAkB,GAAO,OAAIA,EAAU,mBAAqB,qBAG3CtB,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAOe,GAAIR,IAAOX,QAAQ,+LAI9BR,EAAW4B,gBAAiB,kiBC7Db,SAAST,EAATlB,GAAqC,IAAnBqB,EAAmBrB,EAAnBqB,MAAUnB,EAASC,OAAAyB,EAAA,EAAAzB,CAAAH,EAAA,WAClD,OACE6B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACG,SAAAC,GACC,IAAMC,EAAW/B,OAAAgC,EAAA,EAAAhC,CAAA,GACZiC,IAAMF,YACNG,IAAWC,IAAIL,EAAa,yBAGjC,OACEJ,EAAAC,EAAAC,cAACQ,EAAA,EAADpC,OAAAG,OAAA,CACEe,MAAOmB,IAAWnB,GAASA,EAAMa,GAAeb,GAC5CnB,mOCpBDuC,EAAA,GACbC,OAAQ,CACNC,QAAS,UACTC,QAAS,UACTC,aAAc,UACdC,QAAS,UACTC,QAAS,UACTC,OAAQ,UACRC,MAAO,UACPC,QAAS,UACTC,SAAU,UACVC,KAAM,UACNC,UAAW,UACXC,YAAa,UACbC,QAAS,UACTC,mBAAoB,UACpBC,yBAA0B,UAC1BC,MAAO,QAGTC,WAAY,CACVC,cAAe,OACfC,aAAc,SAGhBC,MAAO,CACLlB,QAAS,SACTmB,UAAW,UAGb7B,YAAa,CACX8B,OAAQ,QACRC,MAAO,QACPzC,OAAQ,QACR0C,MAAO,SACPX,QAAS,UAGXY,OAAQ,CACNC,KAAM,OACN5C,OAAQ,OACR6C,IAAK","file":"static/js/src-components-media-media.5349ae83.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz' \nimport Media from '.'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"media\"\n    }}>{`Media`}</h1>\n    <p>{`It works similar to `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ReactTraining/react-media\"\n      }}>{`react-media`}</a>{`,\nbut the `}<inlineCode parentName=\"p\">{`query`}</inlineCode>{` prop also accepts a callback which receives the theme breakpoints as argument.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`import { Media } from 'polvokit'\n\n// It works similar to react-media\n<Media query='(max-width: 599px)'>\n  {matches => matches ? (\n      <p>The document is less than 600px wide.</p>\n    ) : (\n      <p>The document is at least 600px wide.</p>\n    )\n  }\n</Media>\n\n// But, the query prop also accepts a function\n<Media query={breakpoints => \\`(min-width: \\${breakpoints.large})\\`}>\n  {matches => matches ? 'something' : 'other thing'}\n</Media>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'<Media query={bps => `(max-width: ${bps.medium})`}>\\n  {matches => (matches ? \\'less than medium\\' : \\'at least medium\\')}\\n</Media>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Media\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <Media query={bps => `(max-width: ${bps.medium})`} mdxType=\"Media\">\n    {matches => matches ? 'less than medium' : 'at least medium'}\n  </Media>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Media} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ThemeConsumer } from 'styled-components'\nimport ReactMedia from 'react-media'\nimport objectPath from 'object-path'\nimport isFunction from 'is-function'\nimport theme from '../../theme'\n\nexport default function Media ({ query, ...props }) {\n  return (\n    <ThemeConsumer>\n      {themeObject => {\n        const breakpoints = {\n          ...theme.breakpoints,\n          ...objectPath.get(themeObject, 'polvokit.breakpoints')\n        }\n\n        return (\n          <ReactMedia\n            query={isFunction(query) ? query(breakpoints) : query}\n            {...props}\n          />\n        )\n      }}\n    </ThemeConsumer>\n  )\n}\n\nMedia.propTypes = {\n  /** A common CSS media query. It can be a string or a function receives the breakpoints as argument and returns a string */\n  query: PropTypes.oneOf([\n    PropTypes.string,\n    PropTypes.func\n  ]).isRequired\n}\n","export default {\n  colors: {\n    default: '#d1d8e0',\n    primary: '#0E5A8A',\n    primaryLight: '#caf2ff',\n    success: '#05c46b',\n    warning: '#ffa801',\n    danger: '#eb2f06',\n    light: '#ebebeb',\n    control: '#d1d1d1',\n    disabled: '#f1f1f1',\n    text: '#333333',\n    textLight: '#757575',\n    placeholder: '#999999',\n    sidebar: '#F4F5F7',\n    sidebarButtonColor: '#333333',\n    sidebarButtonBeforeColor: '#333333',\n    white: '#fff'\n  },\n\n  dimensions: {\n    controlHeight: '40px',\n    sidebarWidth: '240px'\n  },\n\n  fonts: {\n    primary: 'Ubuntu',\n    secondary: 'Ubuntu'\n  },\n\n  breakpoints: {\n    xsmall: '400px',\n    small: '600px',\n    medium: '800px',\n    large: '1000px',\n    sidebar: '1000px'\n  },\n\n  stacks: {\n    high: 999999,\n    medium: 888888,\n    low: 111\n  }\n}\n"],"sourceRoot":""}