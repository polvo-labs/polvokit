(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{"./src/docs/forms.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return m});var o=t("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),a={},i="wrapper";function m(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(r.b)(i,Object.assign({},a,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"forms"},"Forms"),Object(r.b)("p",null,"We recommend ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/final-form/react-final-form"}),"react-final-form")," for building forms and\n",Object(r.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/polvo-labs/form-utils"}),"@polvo-labs/form-utils")," for handling validation and masking."),Object(r.b)("p",null,"Polvokit also provides a component called ",Object(r.b)("inlineCode",{parentName:"p"},"FormField"),", a wrapper around react-final-form's Field component.\nIt comes with lots of shortcuts for common polvokit components."),Object(r.b)("p",null,"So, instead of doing this:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{}),"<Field name='name' id='user_name'>\n  {({ input, meta, id, ...rest }) => (\n    <FormGroup\n      id={id}\n      label='Name'\n      error={meta.touched && meta.error}\n    />\n      <Input {...input} {...rest} />\n    </FormGroup>\n  )}\n</Field>\n")),Object(r.b)("p",null,"You can use ",Object(r.b)("inlineCode",{parentName:"p"},"FormField")," to do the above work:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"<FormField.Input\n  name='name'\n  label='Name'\n/>\n")),Object(r.b)("p",null,"With FormField, the id is generated automatically."),Object(r.b)("h2",{id:"form-example"},"Form example"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"import { Form } from 'react-final-form'\nimport { FormField, FormSpacer, ButtonSubmit } from 'polvokit'\nimport * as formUtils from '@polvo-labs/form-utils'\n\nfunction FormUser (props) {\n  return (\n    <Form onSubmit={props.onSubmit}>\n      {({ handleSubmit, submitting }) => (\n        <FormSpacer>\n          <FormField.Input\n            name='name'\n            label='Name'\n            {...formUtils.required}\n          />\n          <FormField.Input\n            name='email'\n            label='E-mail'\n            {...formUtils.emailRequired}\n          />\n          <FormField.InputDatePicker\n            name='birthday'\n            label='Birthday'\n            {...formUtils.required}\n          />\n          <FormField.Select\n            name='profile'\n            label='Profile'\n            options=[\n              { label: 'Guest', value: 'guest' },\n              { label: 'Public', value: 'public' },\n              { label: 'Admin', value: 'admin' }\n            ]\n            {...formUtils.required}\n          />\n          <FormField.Switch\n            name='is_email_public'\n            label='Is email public'\n          />\n          <ButtonSubmit submitting={submitting} />\n        </FormSpacer>\n      )}\n    </Form>\n  )\n}\n")))}m&&m===Object(m)&&Object.isExtensible(m)&&Object.defineProperty(m,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/forms.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=src-docs-forms.2a9f11b18318a102dbb7.js.map