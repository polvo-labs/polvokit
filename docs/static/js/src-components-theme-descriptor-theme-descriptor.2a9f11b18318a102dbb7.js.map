{"version":3,"sources":["/var/www/html/polvokit/src/components/ThemeDescriptor/ThemeDescriptor.mdx","/var/www/html/polvokit/src/components/ThemeDescriptor/styles.js","/var/www/html/polvokit/src/components/ThemeDescriptor/index.js"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_var_www_html_polvokit_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Props","ThemeDescriptor","__codesandbox","___WEBPACK_IMPORTED_MODULE_4__","theme","colors","primary","secondary","fonts","of","isMDXComponent","Color","styled","div","_templateObject","prop","ColorLabel","span","_templateObject2","react_default","a","createElement","src","space","keys","map","key","value","concat","label","startsWith","color","defaultValue","readOnly","__webpack_require__","d","__webpack_exports__"],"mappings":"mcAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,mBADR,mBAGAL,OAAAE,EAAA,EAAAF,CAAA,sEACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,gBADZ,0QAkBLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,WAGAL,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,oMAA6MC,QAAS,CACvPZ,MAAOa,KAAOA,KAAKb,MAAQA,EAC3Bc,eACAC,UACAC,qBACCC,cAAa,YAAeZ,QAAQ,cACzCJ,OAAAE,EAAA,EAAAF,CAACiB,EAAA,EAAD,CAAiBC,MAAO,CAClBC,OAAQ,CACNC,QAAS,UACTC,UAAW,WAEbC,MAAO,CACLF,QAAS,QACTC,UAAW,YAEZjB,QAAQ,qBAEbJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAOe,GAAIR,IAAiBX,QAAQ,mNAIxCR,EAAW4B,gBAAiB,+xBCvErB,IAAMC,EAAQC,IAAOC,IAAVC,IAMIC,YAAK,2NAIpB,IAAMC,EAAaJ,IAAOK,KAAVC,KCRR,SAASjB,EAATlB,GAAqC,IAATqB,EAASrB,EAATqB,MACzC,OACEe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgBC,MAAO,IACpBrC,OAAOsC,KAAKpB,GAAOqB,IAAI,SAAAC,GAAG,OACzBP,EAAAC,EAAAC,cAAA,OAAKK,IAAKA,GACRP,EAAAC,EAAAC,cAAA,UAAKK,GACLP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACGpC,OAAOsC,KAAKpB,EAAMsB,IAAMD,IAAI,SAAAV,GAC3B,IAAMY,EAAQvB,EAAMsB,GAAKX,GACzB,OACEI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE/B,GAAE,GAAAqC,OAAKF,EAAL,KAAAE,OAAYb,GACdW,IAAG,GAAAE,OAAKF,EAAL,KAAAE,OAAYb,GACfc,MAAOd,GAENY,EAAMG,YAAcH,EAAMG,WAAW,KACpCX,EAAAC,EAAAC,cAACV,EAAD,CAAOoB,MAAOJ,GACZR,EAAAC,EAAAC,cAACL,EAAD,KAAaW,IAGfR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEU,aAAcL,EACdM,UAAQ,kOA3B9BC,EAAAC,EAAAC,EAAA,sBAAAnC","file":"static/js/src-components-theme-descriptor-theme-descriptor.2ffa6959.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport ThemeDescriptor from '.' \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"themedescriptor\"\n    }}>{`ThemeDescriptor`}</h1>\n    <p>{`Useful component for describing your theme config object.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { ThemeDescriptor } from 'polvokit'\n\n// Your theme should look like this:\nconst theme = {\n  key: {\n    subkey1: 'value'\n    subkey2: 'value'\n  },\n  key2: {\n    subkey1: 'value'\n    subkey2: 'value'\n  }\n}\n\n<ThemeDescriptor theme={theme} />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'<ThemeDescriptor\\n  theme={{\\n    colors: {\\n      primary: \\'#272750\\',\\n      secondary: \\'#0ba87c\\',\\n    },\\n    fonts: {\\n      primary: \\'Arial\\',\\n      secondary: \\'Georgia\\',\\n    },\\n  }}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      ThemeDescriptor\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <ThemeDescriptor theme={{\n        colors: {\n          primary: '#272750',\n          secondary: '#0ba87c'\n        },\n        fonts: {\n          primary: 'Arial',\n          secondary: 'Georgia'\n        }\n      }} mdxType=\"ThemeDescriptor\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ThemeDescriptor} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import styled from 'styled-components'\nimport { prop } from 'styled-tools'\n\nexport const Color = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100px;\n  background-color: ${prop('color')};\n  box-shadow: rgba(27,27,27,0.25) 0 0 1px;\n`\n\nexport const ColorLabel = styled.span`\n  display: inline-block;\n  background-color: #000;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 18px;\n  color: #fff;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, Input, VerticalSpacer } from '../..'\nimport { Color, ColorLabel } from './styles'\n\nexport default function ThemeDescriptor ({ theme }) {\n  return (\n    <VerticalSpacer space={60}>\n      {Object.keys(theme).map(key => (\n        <div key={key}>\n          <h2>{key}</h2>\n          <VerticalSpacer>\n            {Object.keys(theme[key]).map(prop => {\n              const value = theme[key][prop]\n              return (\n                <FormGroup\n                  id={`${key}.${prop}`}\n                  key={`${key}.${prop}`}\n                  label={prop}\n                >\n                  {value.startsWith && value.startsWith('#') ? (\n                    <Color color={value}>\n                      <ColorLabel>{value}</ColorLabel>\n                    </Color>\n                  ) : (\n                    <Input\n                      defaultValue={value}\n                      readOnly\n                    />\n                  )}\n                </FormGroup>\n              )\n            })}\n          </VerticalSpacer>\n        </div>\n      ))}\n    </VerticalSpacer>\n  )\n}\n\nThemeDescriptor.propTypes = {\n  /** Theme object */\n  theme: PropTypes.object.isRequired\n}\n"],"sourceRoot":""}