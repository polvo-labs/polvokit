{"remainingRequest":"/var/www/html/polvokit/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/var/www/html/polvokit/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/var/www/html/polvokit/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/var/www/html/polvokit/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/var/www/html/polvokit/src/components/InputDatePicker/index.js","dependencies":[{"path":"/var/www/html/polvokit/src/components/InputDatePicker/index.js","mtime":1551139765243},{"path":"/var/www/html/polvokit/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/polvokit/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/var/www/html/polvokit/src/components/InputDatePicker/index.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input';\nimport Calendar from '../Calendar';\nimport Icon from '../Icon';\nimport formatDate from '../../utils/formatDate';\nimport maskDate from '../../utils/maskDate';\nimport parseDate from '../../utils/parseDate';\nimport { Container, CalendarWrapper } from './styles';\n\nfunction InputDatePicker(props) {\n  var value = props.value,\n      _onChange = props.onChange,\n      _onFocus = props.onFocus,\n      _onBlur = props.onBlur,\n      parse = props.parse,\n      format = props.format,\n      mask = props.mask,\n      calendarProps = props.calendarProps,\n      rest = _objectWithoutProperties(props, [\"value\", \"onChange\", \"onFocus\", \"onBlur\", \"parse\", \"format\", \"mask\", \"calendarProps\"]);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      focused = _useState2[0],\n      setFocus = _useState2[1];\n\n  var _useState3 = useState(format(value)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputValue = _useState4[0],\n      setInputValue = _useState4[1];\n\n  return React.createElement(Container, {\n    onFocus: function onFocus(e) {\n      setFocus(true);\n\n      _onFocus(e);\n    },\n    onBlur: function onBlur(e) {\n      setFocus(false);\n\n      _onBlur(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Input, Object.assign({\n    before: React.createElement(Icon, {\n      icon: \"calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }),\n    value: mask(inputValue),\n    focused: focused,\n    onFocus: function onFocus(e) {\n      return e.target.select();\n    },\n    onChange: function onChange(e) {\n      setInputValue(e.target.value);\n      var parsedValue = parse(e.target.value);\n\n      if (parsedValue) {\n        _onChange(parsedValue);\n      }\n\n      if (!e.target.value) {\n        _onChange(null);\n      }\n    }\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(CalendarWrapper, {\n    show: focused,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Calendar, Object.assign({\n    value: value,\n    onChange: function onChange(date) {\n      _onChange(date);\n\n      setInputValue(format(date));\n    }\n  }, calendarProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))));\n}\n\nInputDatePicker.propTypes = {\n  /** Value */\n  value: PropTypes.instanceOf(Date),\n\n  /** Change handler */\n  onChange: PropTypes.func.isRequired,\n\n  /** Function to parse input value */\n  parse: PropTypes.func,\n\n  /** Function to format a Date */\n  format: PropTypes.func,\n\n  /** Function to mask input value */\n  mask: PropTypes.func,\n\n  /** Calendar props */\n  calendarProps: PropTypes.object\n};\nInputDatePicker.defaultProps = {\n  format: formatDate,\n  parse: parseDate,\n  mask: maskDate,\n  onFocus: function onFocus() {\n    return null;\n  },\n  onBlur: function onBlur() {\n    return null;\n  }\n};\nvar _default = InputDatePicker;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(InputDatePicker, \"InputDatePicker\", \"/var/www/html/polvokit/src/components/InputDatePicker/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/var/www/html/polvokit/src/components/InputDatePicker/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nInputDatePicker.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"InputDatePicker\",\n  \"props\": {\n    \"format\": {\n      \"defaultValue\": {\n        \"value\": \"formatDate\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function to format a Date\"\n    },\n    \"parse\": {\n      \"defaultValue\": {\n        \"value\": \"parseDate\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function to parse input value\"\n    },\n    \"mask\": {\n      \"defaultValue\": {\n        \"value\": \"maskDate\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function to mask input value\"\n    },\n    \"onFocus\": {\n      \"defaultValue\": {\n        \"value\": \"() => null\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"onBlur\": {\n      \"defaultValue\": {\n        \"value\": \"() => null\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"instanceOf\",\n        \"value\": \"Date\"\n      },\n      \"required\": false,\n      \"description\": \"Value\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"Change handler\"\n    },\n    \"calendarProps\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"Calendar props\"\n    }\n  }\n};",{"version":3,"sources":["/var/www/html/polvokit/src/components/InputDatePicker/index.js"],"names":["React","useState","PropTypes","Input","Calendar","Icon","formatDate","maskDate","parseDate","Container","CalendarWrapper","InputDatePicker","props","value","onChange","onFocus","onBlur","parse","format","mask","calendarProps","rest","focused","setFocus","inputValue","setInputValue","e","target","select","parsedValue","date","propTypes","instanceOf","Date","func","isRequired","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Input from '../Input'\nimport Calendar from '../Calendar'\nimport Icon from '../Icon'\nimport formatDate from '../../utils/formatDate'\nimport maskDate from '../../utils/maskDate'\nimport parseDate from '../../utils/parseDate'\nimport {\n  Container,\n  CalendarWrapper\n} from './styles'\n\nfunction InputDatePicker (props) {\n  const {\n    value,\n    onChange,\n    onFocus,\n    onBlur,\n    parse,\n    format,\n    mask,\n    calendarProps,\n    ...rest\n  } = props\n\n  const [ focused, setFocus ] = useState(false)\n  const [ inputValue, setInputValue ] = useState(\n    format(value)\n  )\n\n  return (\n    <Container\n      onFocus={e => {\n        setFocus(true)\n        onFocus(e)\n      }}\n      onBlur={e => {\n        setFocus(false)\n        onBlur(e)\n      }}\n    >\n      <Input\n        before={<Icon icon='calendar' />}\n        value={mask(inputValue)}\n        focused={focused}\n        onFocus={e => e.target.select()}\n        onChange={e => {\n          setInputValue(e.target.value)\n\n          const parsedValue = parse(e.target.value)\n\n          if (parsedValue) {\n            onChange(parsedValue)\n          }\n\n          if (!e.target.value) {\n            onChange(null)\n          }\n        }}\n        {...rest}\n      />\n      <CalendarWrapper show={focused}>\n        <Calendar\n          value={value}\n          onChange={date => {\n            onChange(date)\n            setInputValue(format(date))\n          }}\n          {...calendarProps}\n        />\n      </CalendarWrapper>\n    </Container>\n  )\n}\n\nInputDatePicker.propTypes = {\n  /** Value */\n  value: PropTypes.instanceOf(Date),\n\n  /** Change handler */\n  onChange: PropTypes.func.isRequired,\n\n  /** Function to parse input value */\n  parse: PropTypes.func,\n\n  /** Function to format a Date */\n  format: PropTypes.func,\n\n  /** Function to mask input value */\n  mask: PropTypes.func,\n\n  /** Calendar props */\n  calendarProps: PropTypes.object\n}\n\nInputDatePicker.defaultProps = {\n  format: formatDate,\n  parse: parseDate,\n  mask: maskDate,\n  onFocus: () => null,\n  onBlur: () => null\n}\n\nexport default InputDatePicker\n"]}]}