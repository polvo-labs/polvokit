{"remainingRequest":"/var/www/html/polvokit/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/var/www/html/polvokit/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/var/www/html/polvokit/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/var/www/html/polvokit/src/components/InputDatePicker/index.js","dependencies":[{"path":"/var/www/html/polvokit/src/components/InputDatePicker/index.js","mtime":1551139765243},{"path":"/var/www/html/polvokit/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/polvokit/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest();}function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}function _iterableToArrayLimit(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"]!=null)_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import React,{useState}from'react';import Input from'../Input';import Calendar from'../Calendar';import Icon from'../Icon';import formatDate from'../../utils/formatDate';import maskDate from'../../utils/maskDate';import parseDate from'../../utils/parseDate';import{Container,CalendarWrapper}from'./styles';function InputDatePicker(props){var value=props.value,_onChange=props.onChange,_onFocus=props.onFocus,_onBlur=props.onBlur,parse=props.parse,format=props.format,mask=props.mask,calendarProps=props.calendarProps,rest=_objectWithoutProperties(props,[\"value\",\"onChange\",\"onFocus\",\"onBlur\",\"parse\",\"format\",\"mask\",\"calendarProps\"]);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),focused=_useState2[0],setFocus=_useState2[1];var _useState3=useState(format(value)),_useState4=_slicedToArray(_useState3,2),inputValue=_useState4[0],setInputValue=_useState4[1];return React.createElement(Container,{onFocus:function onFocus(e){setFocus(true);_onFocus(e);},onBlur:function onBlur(e){setFocus(false);_onBlur(e);}},React.createElement(Input,Object.assign({before:React.createElement(Icon,{icon:\"calendar\"}),value:mask(inputValue),focused:focused,onFocus:function onFocus(e){return e.target.select();},onChange:function onChange(e){setInputValue(e.target.value);var parsedValue=parse(e.target.value);if(parsedValue){_onChange(parsedValue);}if(!e.target.value){_onChange(null);}}},rest)),React.createElement(CalendarWrapper,{show:focused},React.createElement(Calendar,Object.assign({value:value,onChange:function onChange(date){_onChange(date);setInputValue(format(date));}},calendarProps))));}InputDatePicker.defaultProps={format:formatDate,parse:parseDate,mask:maskDate,onFocus:function onFocus(){return null;},onBlur:function onBlur(){return null;}};export default InputDatePicker;InputDatePicker.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"InputDatePicker\",\"props\":{\"format\":{\"defaultValue\":{\"value\":\"formatDate\",\"computed\":true},\"type\":{\"name\":\"func\"},\"required\":false,\"description\":\"Function to format a Date\"},\"parse\":{\"defaultValue\":{\"value\":\"parseDate\",\"computed\":true},\"type\":{\"name\":\"func\"},\"required\":false,\"description\":\"Function to parse input value\"},\"mask\":{\"defaultValue\":{\"value\":\"maskDate\",\"computed\":true},\"type\":{\"name\":\"func\"},\"required\":false,\"description\":\"Function to mask input value\"},\"onFocus\":{\"defaultValue\":{\"value\":\"() => null\",\"computed\":false},\"required\":false},\"onBlur\":{\"defaultValue\":{\"value\":\"() => null\",\"computed\":false},\"required\":false},\"value\":{\"type\":{\"name\":\"instanceOf\",\"value\":\"Date\"},\"required\":false,\"description\":\"Value\"},\"onChange\":{\"type\":{\"name\":\"func\"},\"required\":true,\"description\":\"Change handler\"},\"calendarProps\":{\"type\":{\"name\":\"object\"},\"required\":false,\"description\":\"Calendar props\"}}};",{"version":3,"sources":["/var/www/html/polvokit/src/components/InputDatePicker/index.js"],"names":["React","useState","Input","Calendar","Icon","formatDate","maskDate","parseDate","Container","CalendarWrapper","InputDatePicker","props","value","onChange","onFocus","onBlur","parse","format","mask","calendarProps","rest","focused","setFocus","inputValue","setInputValue","e","target","select","parsedValue","date","defaultProps"],"mappings":"izCAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA,OACEC,SADF,CAEEC,eAFF,KAGO,UAHP,CAKA,QAASC,CAAAA,eAAT,CAA0BC,KAA1B,CAAiC,IAE7BC,CAAAA,KAF6B,CAW3BD,KAX2B,CAE7BC,KAF6B,CAG7BC,SAH6B,CAW3BF,KAX2B,CAG7BE,QAH6B,CAI7BC,QAJ6B,CAW3BH,KAX2B,CAI7BG,OAJ6B,CAK7BC,OAL6B,CAW3BJ,KAX2B,CAK7BI,MAL6B,CAM7BC,KAN6B,CAW3BL,KAX2B,CAM7BK,KAN6B,CAO7BC,MAP6B,CAW3BN,KAX2B,CAO7BM,MAP6B,CAQ7BC,IAR6B,CAW3BP,KAX2B,CAQ7BO,IAR6B,CAS7BC,aAT6B,CAW3BR,KAX2B,CAS7BQ,aAT6B,CAU1BC,IAV0B,0BAW3BT,KAX2B,gGAaDV,QAAQ,CAAC,KAAD,CAbP,wCAavBoB,OAbuB,eAadC,QAbc,8BAcOrB,QAAQ,CAC5CgB,MAAM,CAACL,KAAD,CADsC,CAdf,yCAcvBW,UAduB,eAcXC,aAdW,eAkB/B,MACE,qBAAC,SAAD,EACE,OAAO,CAAE,iBAAAC,CAAC,CAAI,CACZH,QAAQ,CAAC,IAAD,CAAR,CACAR,QAAO,CAACW,CAAD,CAAP,CACD,CAJH,CAKE,MAAM,CAAE,gBAAAA,CAAC,CAAI,CACXH,QAAQ,CAAC,KAAD,CAAR,CACAP,OAAM,CAACU,CAAD,CAAN,CACD,CARH,EAUE,oBAAC,KAAD,gBACE,MAAM,CAAE,oBAAC,IAAD,EAAM,IAAI,CAAC,UAAX,EADV,CAEE,KAAK,CAAEP,IAAI,CAACK,UAAD,CAFb,CAGE,OAAO,CAAEF,OAHX,CAIE,OAAO,CAAE,iBAAAI,CAAC,QAAIA,CAAAA,CAAC,CAACC,MAAF,CAASC,MAAT,EAAJ,EAJZ,CAKE,QAAQ,CAAE,kBAAAF,CAAC,CAAI,CACbD,aAAa,CAACC,CAAC,CAACC,MAAF,CAASd,KAAV,CAAb,CAEA,GAAMgB,CAAAA,WAAW,CAAGZ,KAAK,CAACS,CAAC,CAACC,MAAF,CAASd,KAAV,CAAzB,CAEA,GAAIgB,WAAJ,CAAiB,CACff,SAAQ,CAACe,WAAD,CAAR,CACD,CAED,GAAI,CAACH,CAAC,CAACC,MAAF,CAASd,KAAd,CAAqB,CACnBC,SAAQ,CAAC,IAAD,CAAR,CACD,CACF,CAjBH,EAkBMO,IAlBN,EAVF,CA8BE,oBAAC,eAAD,EAAiB,IAAI,CAAEC,OAAvB,EACE,oBAAC,QAAD,gBACE,KAAK,CAAET,KADT,CAEE,QAAQ,CAAE,kBAAAiB,IAAI,CAAI,CAChBhB,SAAQ,CAACgB,IAAD,CAAR,CACAL,aAAa,CAACP,MAAM,CAACY,IAAD,CAAP,CAAb,CACD,CALH,EAMMV,aANN,EADF,CA9BF,CADF,CA2CD,CAsBDT,eAAe,CAACoB,YAAhB,CAA+B,CAC7Bb,MAAM,CAAEZ,UADqB,CAE7BW,KAAK,CAAET,SAFsB,CAG7BW,IAAI,CAAEZ,QAHuB,CAI7BQ,OAAO,CAAE,yBAAM,KAAN,EAJoB,CAK7BC,MAAM,CAAE,wBAAM,KAAN,EALqB,CAA/B,CAQA,cAAeL,CAAAA,eAAf,C","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Input from '../Input'\nimport Calendar from '../Calendar'\nimport Icon from '../Icon'\nimport formatDate from '../../utils/formatDate'\nimport maskDate from '../../utils/maskDate'\nimport parseDate from '../../utils/parseDate'\nimport {\n  Container,\n  CalendarWrapper\n} from './styles'\n\nfunction InputDatePicker (props) {\n  const {\n    value,\n    onChange,\n    onFocus,\n    onBlur,\n    parse,\n    format,\n    mask,\n    calendarProps,\n    ...rest\n  } = props\n\n  const [ focused, setFocus ] = useState(false)\n  const [ inputValue, setInputValue ] = useState(\n    format(value)\n  )\n\n  return (\n    <Container\n      onFocus={e => {\n        setFocus(true)\n        onFocus(e)\n      }}\n      onBlur={e => {\n        setFocus(false)\n        onBlur(e)\n      }}\n    >\n      <Input\n        before={<Icon icon='calendar' />}\n        value={mask(inputValue)}\n        focused={focused}\n        onFocus={e => e.target.select()}\n        onChange={e => {\n          setInputValue(e.target.value)\n\n          const parsedValue = parse(e.target.value)\n\n          if (parsedValue) {\n            onChange(parsedValue)\n          }\n\n          if (!e.target.value) {\n            onChange(null)\n          }\n        }}\n        {...rest}\n      />\n      <CalendarWrapper show={focused}>\n        <Calendar\n          value={value}\n          onChange={date => {\n            onChange(date)\n            setInputValue(format(date))\n          }}\n          {...calendarProps}\n        />\n      </CalendarWrapper>\n    </Container>\n  )\n}\n\nInputDatePicker.propTypes = {\n  /** Value */\n  value: PropTypes.instanceOf(Date),\n\n  /** Change handler */\n  onChange: PropTypes.func.isRequired,\n\n  /** Function to parse input value */\n  parse: PropTypes.func,\n\n  /** Function to format a Date */\n  format: PropTypes.func,\n\n  /** Function to mask input value */\n  mask: PropTypes.func,\n\n  /** Calendar props */\n  calendarProps: PropTypes.object\n}\n\nInputDatePicker.defaultProps = {\n  format: formatDate,\n  parse: parseDate,\n  mask: maskDate,\n  onFocus: () => null,\n  onBlur: () => null\n}\n\nexport default InputDatePicker\n"]}]}