{"remainingRequest":"/var/www/html/polvokit/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/var/www/html/polvokit/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/var/www/html/polvokit/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/var/www/html/polvokit/src/components/PolvoLogo/index.js","dependencies":[{"path":"/var/www/html/polvokit/src/components/PolvoLogo/index.js","mtime":1551049605395},{"path":"/var/www/html/polvokit/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/polvokit/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import React from'react';import Image from'../Image';import logo from\"./polvo.svg\";import logoWhite from\"./polvo-white.svg\";export default function PolvoLogo(_ref){var white=_ref.white,props=_objectWithoutProperties(_ref,[\"white\"]);return React.createElement(Image,Object.assign({src:white?logoWhite:logo},props));}PolvoLogo.defaultProps={white:false};PolvoLogo.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"PolvoLogo\",\"props\":{\"white\":{\"defaultValue\":{\"value\":\"false\",\"computed\":false},\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Use the white version\"}}};",{"version":3,"sources":["/var/www/html/polvokit/src/components/PolvoLogo/index.js"],"names":["React","Image","PolvoLogo","white","props","logoWhite","logo","defaultProps"],"mappings":"wsBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,C,uEAIA,cAAe,SAASC,CAAAA,SAAT,MAAyC,IAAnBC,CAAAA,KAAmB,MAAnBA,KAAmB,CAATC,KAAS,0CACtD,MACE,qBAAC,KAAD,gBAAO,GAAG,CAAED,KAAK,CAAGE,SAAH,CAAeC,IAAhC,EAA0CF,KAA1C,EADF,CAGD,CAODF,SAAS,CAACK,YAAV,CAAyB,CACvBJ,KAAK,CAAE,KADgB,CAAzB,C","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Image from '../Image'\nimport logo from './polvo.svg'\nimport logoWhite from './polvo-white.svg'\n\nexport default function PolvoLogo ({ white, ...props }) {\n  return (\n    <Image src={white ? logoWhite : logo} {...props} />\n  )\n}\n\nPolvoLogo.propTypes = {\n  /** Use the white version */\n  white: PropTypes.bool\n}\n\nPolvoLogo.defaultProps = {\n  white: false\n}\n"]}]}