{"remainingRequest":"/var/www/html/polvokit/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/var/www/html/polvokit/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/var/www/html/polvokit/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/var/www/html/polvokit/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/var/www/html/polvokit/src/components/Button/index.js","dependencies":[{"path":"/var/www/html/polvokit/src/components/Button/index.js","mtime":1551049605395},{"path":"/var/www/html/polvokit/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/polvokit/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/var/www/html/polvokit/src/components/Button/index.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Icon from '../Icon';\nimport theme from '../../theme';\nimport filterProps from '../../utils/filterProps';\nimport { ButtonStyled, Before, After, Loading } from './styles';\n\nfunction Button(_ref) {\n  var before = _ref.before,\n      after = _ref.after,\n      children = _ref.children,\n      loading = _ref.loading,\n      props = _objectWithoutProperties(_ref, [\"before\", \"after\", \"children\", \"loading\"]);\n\n  return React.createElement(ButtonStyled, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), loading ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    icon: \"spinner\",\n    spin: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, before && React.createElement(Before, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, before), children, after && React.createElement(After, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, after)));\n}\n\nButton.propTypes = {\n  /** Appearance */\n  appearance: PropTypes.oneOf(Object.keys(theme.colors)),\n\n  /** Before */\n  before: PropTypes.element,\n\n  /** After */\n  after: PropTypes.element,\n\n  /** Loading state */\n  loading: PropTypes.bool,\n\n  /** Full button width */\n  full: PropTypes.bool,\n\n  /** Full button at certain breakpoint */\n  fullAt: PropTypes.oneOf(Object.keys(theme.breakpoints))\n};\nButton.defaultProps = {\n  appearance: 'default',\n  loading: false,\n  full: false\n};\n\nButton.Anchor = function ButtonAnchor(props) {\n  return React.createElement(Button, Object.assign({\n    as: \"a\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nvar FilteredLink = function FilteredLink(props) {\n  return React.createElement(Link, Object.assign({}, filterProps(props, Button.propTypes), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nButton.Link = function ButtonLink(props) {\n  return React.createElement(Button, Object.assign({\n    as: FilteredLink\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nvar _default = Button;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Button, \"Button\", \"/var/www/html/polvokit/src/components/Button/index.js\");\n  reactHotLoader.register(FilteredLink, \"FilteredLink\", \"/var/www/html/polvokit/src/components/Button/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/var/www/html/polvokit/src/components/Button/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nButton.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"appearance\": {\n      \"defaultValue\": {\n        \"value\": \"'default'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"computed\": true,\n        \"value\": \"Object.keys(theme.colors)\"\n      },\n      \"required\": false,\n      \"description\": \"Appearance\"\n    },\n    \"loading\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Loading state\"\n    },\n    \"full\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Full button width\"\n    },\n    \"before\": {\n      \"type\": {\n        \"name\": \"element\"\n      },\n      \"required\": false,\n      \"description\": \"Before\"\n    },\n    \"after\": {\n      \"type\": {\n        \"name\": \"element\"\n      },\n      \"required\": false,\n      \"description\": \"After\"\n    },\n    \"fullAt\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"computed\": true,\n        \"value\": \"Object.keys(theme.breakpoints)\"\n      },\n      \"required\": false,\n      \"description\": \"Full button at certain breakpoint\"\n    }\n  }\n};",{"version":3,"sources":["/var/www/html/polvokit/src/components/Button/index.js"],"names":["React","PropTypes","Link","Icon","theme","filterProps","ButtonStyled","Before","After","Loading","Button","before","after","children","loading","props","propTypes","appearance","oneOf","Object","keys","colors","element","bool","full","fullAt","breakpoints","defaultProps","Anchor","ButtonAnchor","FilteredLink","ButtonLink"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,OAAtC,QAAqD,UAArD;;AAEA,SAASC,MAAT,OAAiE;AAAA,MAA9CC,MAA8C,QAA9CA,MAA8C;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAATC,KAAS;;AAC/D,SACE,oBAAC,YAAD,oBAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,OAAO,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,IAAI,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,GAKN,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,IAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,MAAT,CADb,EAEGE,QAFH,EAGGD,KAAK,IAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAR,CAHZ,CANJ,CADF;AAeD;;AAEDF,MAAM,CAACM,SAAP,GAAmB;AACjB;AACAC,EAAAA,UAAU,EAAEhB,SAAS,CAACiB,KAAV,CAAgBC,MAAM,CAACC,IAAP,CAAYhB,KAAK,CAACiB,MAAlB,CAAhB,CAFK;;AAIjB;AACAV,EAAAA,MAAM,EAAEV,SAAS,CAACqB,OALD;;AAOjB;AACAV,EAAAA,KAAK,EAAEX,SAAS,CAACqB,OARA;;AAUjB;AACAR,EAAAA,OAAO,EAAEb,SAAS,CAACsB,IAXF;;AAajB;AACAC,EAAAA,IAAI,EAAEvB,SAAS,CAACsB,IAdC;;AAgBjB;AACAE,EAAAA,MAAM,EAAExB,SAAS,CAACiB,KAAV,CAAgBC,MAAM,CAACC,IAAP,CAAYhB,KAAK,CAACsB,WAAlB,CAAhB;AAjBS,CAAnB;AAoBAhB,MAAM,CAACiB,YAAP,GAAsB;AACpBV,EAAAA,UAAU,EAAE,SADQ;AAEpBH,EAAAA,OAAO,EAAE,KAFW;AAGpBU,EAAAA,IAAI,EAAE;AAHc,CAAtB;;AAMAd,MAAM,CAACkB,MAAP,GAAgB,SAASC,YAAT,CAAuBd,KAAvB,EAA8B;AAC5C,SAAO,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC;AAAX,KAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFD;;AAIA,IAAMe,YAAY,GAAG,SAAfA,YAAe,CAAAf,KAAK;AAAA,SACxB,oBAAC,IAAD,oBAAUV,WAAW,CAACU,KAAD,EAAQL,MAAM,CAACM,SAAf,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADwB;AAAA,CAA1B;;AAGAN,MAAM,CAACR,IAAP,GAAc,SAAS6B,UAAT,CAAqBhB,KAArB,EAA4B;AACxC,SACE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAEe;AADN,KAEMf,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAMD,CAPD;;eASeL,M;AAAf;;;;;;;;;;0BA5DSA,M;0BAgDHoB,Y","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport Icon from '../Icon'\nimport theme from '../../theme'\nimport filterProps from '../../utils/filterProps'\nimport { ButtonStyled, Before, After, Loading } from './styles'\n\nfunction Button ({ before, after, children, loading, ...props }) {\n  return (\n    <ButtonStyled {...props}>\n      {loading ? (\n        <Loading>\n          <Icon icon='spinner' spin />\n        </Loading>\n      ) : (\n        <React.Fragment>\n          {before && <Before>{before}</Before>}\n          {children}\n          {after && <After>{after}</After>}\n        </React.Fragment>\n      )}\n    </ButtonStyled>\n  )\n}\n\nButton.propTypes = {\n  /** Appearance */\n  appearance: PropTypes.oneOf(Object.keys(theme.colors)),\n\n  /** Before */\n  before: PropTypes.element,\n\n  /** After */\n  after: PropTypes.element,\n\n  /** Loading state */\n  loading: PropTypes.bool,\n\n  /** Full button width */\n  full: PropTypes.bool,\n\n  /** Full button at certain breakpoint */\n  fullAt: PropTypes.oneOf(Object.keys(theme.breakpoints))\n}\n\nButton.defaultProps = {\n  appearance: 'default',\n  loading: false,\n  full: false\n}\n\nButton.Anchor = function ButtonAnchor (props) {\n  return <Button as='a' {...props} />\n}\n\nconst FilteredLink = props =>\n  <Link {...filterProps(props, Button.propTypes)} />\n\nButton.Link = function ButtonLink (props) {\n  return (\n    <Button\n      as={FilteredLink}\n      {...props}\n    />\n  )\n}\n\nexport default Button\n"]}]}